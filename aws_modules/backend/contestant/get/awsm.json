{
  "lambda": {
    "envVars": [],
    "deploy": true,
    "package": {
      "optimize": {
        "builder": "browserify",
        "minify": true,
        "ignore": [],
        "exclude": [
          "aws-sdk"
        ],
        "includePaths": []
      },
      "excludePatterns": []
    },
    "cloudFormation": {
      "Description": "",
      "Handler": "aws_modules/backend/contestant/get/handler.handler",
      "MemorySize": 1024,
      "Runtime": "nodejs",
      "Timeout": 6
    }
  },
  "apiGateway": {
    "deploy": false,
    "cloudFormation": {
      "Type": "AWS",
      "Path": "season/{seasonId}/contestant",
      "Method": "GET",
      "AuthorizationType": "AWS_IAM",
      "ApiKeyRequired": false,
      "RequestTemplates": {
        "application/json": "{\"method\":\"$context.httpMethod\", \"userAgent\":\"$context.identity.userAgent\", \"cognitoAuthenticationProvider\":\"$util.escapeJavaScript($context.identity.cognitoAuthenticationProvider)\", \"cognitoAuthenticationType\":\"$util.escapeJavaScript($context.identity.cognitoAuthenticationType)\", \"cognitoIdentityId\":\"$util.escapeJavaScript($context.identity.cognitoIdentityId)\", \"cognitoIdentityPoolId\":\"$util.escapeJavaScript($context.identity.cognitoIdentityPoolId)\"}"
      },
      "RequestParameters": {
        "integration.request.path.seasonId": "method.request.path.seasonId",
        "integration.request.querystring.id": "method.request.querystring.id",
        "integration.request.querystring.ids": "method.request.querystring.ids"
      },
      "Responses": {
        "400": {
          "statusCode": "400",
          "responseParameters": {
            "method.response.header.Access-Control-Allow-Origin": "'*'"
          }
        },
        "default": {
          "statusCode": "200",
          "responseParameters": {
            "method.response.header.Access-Control-Allow-Origin": "'*'"
          },
          "responseModels": {},
          "responseTemplates": {
            "application/json": ""
          }
        }
      }
    }
  }
}